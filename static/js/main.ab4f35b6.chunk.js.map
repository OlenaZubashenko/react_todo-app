{"version":3,"sources":["components/Header/Header.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Header","state","handleInputChange","event","setState","title","target","value","handleReset","handleSubmit","preventDefault","props","addTodoItem","todos","trim","id","Date","comleted","this","className","onSubmit","type","placeholder","onChange","React","Component","TodoListItem","item","todoListItem","deleteTodo","classNames","onClick","onClickCompleted","htmlFor","TodoList","todoList","map","todo","key","Filter","href","App","index","findIndex","el","newArray","slice","newTodo","elt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab4f35b6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  //state = this.state;\n  state = {\n    // title: '',\n    // id: 0,\n  }\n\n   handleInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    })\n  };\n\n  handleInputChange = ({ target }) => {\n    this.setState({\n      title: target.value,\n    });\n  }\n\n  handleReset = () => {\n    this.setState({\n      title: '',\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addTodoItem, todos } = this.props;\n    const { title } = this.state;\n\n    if (title.trim()) {\n      const newTodo = {\n        title: title.trim(),\n        id: +(new Date()),\n        comleted: false,\n      };\n      addTodoItem(newTodo);\n    }\n    this.handleReset();\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form  onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    )\n  };\n};\n\nexport default Header;\n\nHeader.propTypes = {\n  addTodoItem: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\n\nexport default class TodoListItem extends React.Component {\n  state = {\n    item: this.props.todoListItem\n  };\n\n  render() {\n    const item = this.state.item;\n    const { title, id } = item;\n    const deleteTodo = this.props.deleteTodo;\n    //const { completed } = this.state;\n\n    let classNames = '';\n    if (item.comleted) {\n      classNames += 'completed'\n    };\n\n    return (\n      <>\n        <li className={classNames}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={id}\n              onClick={() => this.props.onClickCompleted(item)}\n            />\n            <label htmlFor={id}>{title}</label>\n            <button type=\"button\" className=\"destroy\"\n              onClick={() => deleteTodo(id)}\n            />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n      </>\n    )\n  }\n\n}\n\n\n\n\n","import React from 'react';\nimport TodoListItem from '../TodoListItem/TodoListItem';\n\nclass TodoList extends React.Component {\n  state = {\n    todos: this.props.todos\n  }\n\n  render() {\n    let todoList = this.props.todos.map(todo => {\n      return <TodoListItem\n        key={('todo_item_' + todo.id)}\n        todoListItem={todo}\n        deleteTodo={this.props.deleteTodo}\n        onClickCompleted={this.props.onClickCompleted} />\n    })\n    return (\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <ul className=\"todo-list\">\n          {todoList}\n        </ul>\n      </section>\n    )\n  }\n}\n\n\n\n//  function TodoList ({ todos}) {\n//     let deleteTodo = (id) => {\n//       console.log('del ', id);\n//     }\n//       let todoList = todos.map(todo => {\n//         return <TodoListItem\n//         todoListItem = {todo}\n//         deleteTodo = {deleteTodo} />\n//       })\n//       return (\n//         <section className=\"main\">\n//            <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n//         <label htmlFor=\"toggle-all\">Mark all as complete</label>\n//            <ul className=\"todo-list\">\n//            { todoList }\n//            </ul>\n//         </section>\n//       )\n//     };\n\nexport default TodoList;\n","import React from 'react';\n\nclass Filter extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          3 items left\n              </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n              </button>\n      </footer>\n    )\n  }\n}\n\nexport default Filter;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport TodoList from './components/TodoList/TodoList';\nimport Filter from './components/Filter/Filter';\n//import todos from './api/todos';\n\nconst todos = [];\n\nexport default class App extends React.Component {\n  state = {\n    todos: [...todos],\n\n  }\n  deleteTodo = (id) => {\n    const index = this.state.todos.findIndex((el) => el.id === id);\n\n    const newArray = [\n      ...this.state.todos.slice(0, index),\n      ...this.state.todos.slice(index + 1)\n    ];\n\n    this.setState({\n      todos: newArray\n    });\n  }\n\n  addTodoItem = (newTodo) => {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  };\n\n  onClickCompleted = (elt) => {\n    elt.comleted = !elt.comleted;\n    const index = this.state.todos.findIndex((el) => el.id === elt.id);\n\n    const newArray = [\n      ...this.state.todos.slice(0, index),\n      elt,\n      ...this.state.todos.slice(index + 1)\n    ];\n\n    this.setState({\n      todos: newArray\n    });\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n\n        <Header\n          todos={todos}\n          addTodoItem={this.addTodoItem}\n\n        />\n        <TodoList\n          todos={todos}\n          deleteTodo={this.deleteTodo}\n          onClickCompleted={this.onClickCompleted}\n        />\n        <Filter />\n      </section>\n\n    )\n  }\n}\n// function App() {\n//   return (\n//     <section className=\"todoapp\">\n//       <header className=\"header\">\n//         <h1>todos</h1>\n\n//         <input\n//           className=\"new-todo\"\n//           placeholder=\"What needs to be done?\"\n//         />\n//       </header>\n\n//       <section className=\"main\">\n//         <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n//         <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n//         <ul className=\"todo-list\">\n//           <li>\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n//               <label htmlFor=\"todo-1\">asdfghj</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li className=\"completed\">\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n//               <label htmlFor=\"todo-2\">qwertyuio</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li className=\"editing\">\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n//               <label htmlFor=\"todo-3\">zxcvbnm</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li>\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n//               <label htmlFor=\"todo-4\">1234567890</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n//         </ul>\n//       </section>\n\n//       <footer className=\"footer\">\n//         <span className=\"todo-count\">\n//           3 items left\n//         </span>\n\n//         <ul className=\"filters\">\n//           <li>\n//             <a href=\"#/\" className=\"selected\">All</a>\n//           </li>\n\n//           <li>\n//             <a href=\"#/active\">Active</a>\n//           </li>\n\n//           <li>\n//             <a href=\"#/completed\">Completed</a>\n//           </li>\n//         </ul>\n\n//         <button type=\"button\" className=\"clear-completed\">\n//           Clear completed\n//         </button>\n//       </footer>\n//     </section>\n//   );\n// }\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}