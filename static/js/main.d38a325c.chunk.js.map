{"version":3,"sources":["components/Header/Header.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Header","state","handleInputChange","target","setState","title","value","handleReset","handleSubmit","event","preventDefault","addTodoItem","props","trim","id","Date","completed","this","toogleSelection","className","onSubmit","type","onChange","htmlFor","placeholder","React","Component","TodoListItem","item","todoListItem","deleteTodo","classNames","checked","onClick","onClickCompleted","TodoList","todos","filter","todo","todoList","map","key","Filter","buttons","name","label","onFilterChange","e","console","log","removeCompleted","counter","count","App","selectAll","index","findIndex","el","newArray","slice","newTodo","elt","toggleSelectAll","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d38a325c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  //state = this.state;\n  state = {\n    // title: '',\n    // id: 0,\n  }\n\n  handleInputChange = ({ target }) => {\n    this.setState({\n      title: target.value,\n    });\n  }\n\n  handleReset = () => {\n    this.setState({\n      title: '',\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addTodoItem } = this.props;\n    const { title } = this.state;\n\n    if (title.trim()) {\n      const newTodo = {\n        title: title.trim(),\n        id: +(new Date()),\n        completed: false,\n      };\n      addTodoItem(newTodo);\n    }\n    this.handleReset();\n  }\n\n  render() {\n    const { title } = this.state;\n    const {toogleSelection} = this.props;\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={toogleSelection}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.handleInputChange}\n          />\n\n        </form>\n      </header>\n    )\n  };\n};\n\nexport default Header;\n\nHeader.propTypes = {\n  addTodoItem: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TodoListItem extends React.Component {\n  state = {\n    item: this.props.todoListItem\n  };\n\n  render() {\n    const item = this.state.item;\n    const { title, id } = item;\n    const deleteTodo = this.props.deleteTodo;\n    //const { completed } = this.state;\n\n    let classNames = '';\n    if (item.completed) {\n      classNames += 'completed'\n    };\n\n    return (\n      <>\n        <li className={classNames}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={item.completed}\n              id={id}\n              onClick={() => this.props.onClickCompleted(item)}\n            />\n            <label htmlFor={id}>{title}</label>\n            <button type=\"button\" className=\"destroy\"\n              onClick={() => deleteTodo(id)}\n            />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n      </>\n    )\n  }\n}\n\nTodoListItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  };\n\n\n","import React from 'react';\nimport TodoListItem from '../TodoListItem/TodoListItem';\nimport PropTypes from 'prop-types';\n\nexport default class TodoList extends React.Component {\n  state = {\n    todos: this.props.todos\n  }\n\n  filter(filter) {\n    switch (filter) {\n      case 'active':\n        return this.props.todos.filter(todo => !todo.completed);\n      case 'done':\n        return this.props.todos.filter(todo => todo.completed);\n      default:\n        return this.props.todos;\n    }\n  }\n\n\n  render() {\n    const { filter } = this.props;\n\n    let todoList = this.filter(filter).map(todo => {\n      return <TodoListItem\n        key={('todo_item_' + todo.id)}\n        todoListItem={todo}\n        deleteTodo={this.props.deleteTodo}\n        onClickCompleted={this.props.onClickCompleted}\n\n      />\n    })\n    return (\n      <section className=\"main\">\n        <ul className=\"todo-list\">\n          {todoList}\n        </ul>\n      </section>\n    )\n  }\n}\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Filter extends React.Component {\n  state = {\n    // counter: this.counter,\n  }\n\n  buttons = [\n    { name: \"all\", label: \"All\" },\n    { name: \"done\", label: \"Done\" },\n    { name: \"active\", label: \"Active\" },\n  ]\n  onFilterChange = (e) =>{\n    e.preventDefault();\n    console.log('По ссылке кликнули.');\n  }\n\n  render() {\n    const { filter, onFilterChange, removeCompleted } = this.props;\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n     const classNames = isActive ? \"selected\" : '';\n      return (\n        <li key={name}  onClick={() => onFilterChange(name)}>\n          <a className={classNames}>\n            {label}\n          </a>\n        </li>\n      )\n    })\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {` to do: `}\n          {this.props.counter}\n          {`, done: `}\n          {this.props.count}\n        </span>\n        <ul className=\"filters\">\n          {buttons}\n        </ul>\n        <button type=\"button\" className=\"clear-completed\"\n          onClick={removeCompleted}\n        >\n          Clear completed\n              </button>\n      </footer>\n    )\n  }\n}\n\nFilter.propTypes = {\n removeCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport TodoList from './components/TodoList/TodoList';\nimport Filter from './components/Filter/Filter';\n//import todos from './api/todos';\n\nconst todos = [];\n\nexport default class App extends React.Component {\n  state = {\n    todos: [...todos],\n    counter: 0,\n    count: 0,\n    filter: 'all',\n    selectAll: false,\n  }\n  deleteTodo = (id) => {\n    const index = this.state.todos.findIndex((el) => el.id === id);\n\n    const newArray = [\n      ...this.state.todos.slice(0, index),\n      ...this.state.todos.slice(index + 1)\n    ];\n    this.setState({\n      todos: newArray\n    });\n  }\n\n  addTodoItem = (newTodo) => {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  };\n\n  onClickCompleted = (elt) => {\n    elt.completed = !elt.completed;\n    const index = this.state.todos.findIndex((el) => el.id === elt.id);\n\n    const newArray = [\n      ...this.state.todos.slice(0, index),\n      elt,\n      ...this.state.todos.slice(index + 1)\n    ];\n    this.setState({\n      todos: newArray\n    });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({\n      filter: filter,\n    });\n  };\n\n  toggleSelectAll = () => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        todo.completed = !todo.completed;\n        return todo;\n      })\n    });\n  };\n\n  removeCompleted = () => {\n    this.setState({\n      todos: this.state.todos.filter(todo => !todo.completed),\n    });\n  }\n\n  render() {\n    const { todos, filter } = this.state;\n\n    const counter = todos.filter(todo => !todo.completed).length;\n    const count = todos.filter(todo => todo.completed).length;\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          todos={todos}\n          addTodoItem={this.addTodoItem}\n          toogleSelection={this.toggleSelectAll}\n        />\n        <TodoList\n          todos={todos}\n          filter={filter}\n          deleteTodo={this.deleteTodo}\n          onClickCompleted={this.onClickCompleted}\n         removeCompleted={this.removeCompleted}\n        />\n        <Filter\n          todos={todos}\n          counter={counter}\n          count={count}\n          filter={filter}\n          onFilterChange={this.onFilterChange}\n          removeCompleted={this.removeCompleted}\n        />\n      </section>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}